
#Область СобытияФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Слово	= "Слово";
	Буква	= "Буква";
	
	КолВоБукв		= 5;
	КолВоПопыток	= 6;
	
	ЦветСерый	= Новый Цвет(128, 128, 128);
	ЦветБелый	= Новый Цвет(255, 255, 255);
	ЦветЖелтый	= Новый Цвет(255, 219, 6);
	ЦветЧерный	= Новый Цвет(0, 0, 0);
	
	СоздатьСлова();
	
КонецПроцедуры // ПриСозданииНаСервере()

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Лог = Новый Массив;
	Шаг = 1;
	Шаблон = "";
	ЧастьЗапроса = "";
	
	Элементы.ФормаШаги.Заголовок = "Шаг " + Шаг;
	
	Если КоличествоСловВСловаре() <> 0 Тогда
		ДобавитьВЛог("Начните отгадывать с нажатия нижней кнопки");
	Иначе 
		ДобавитьВЛог("Загрузите словарь!");
	КонецЕсли;
	
КонецПроцедуры // ПриОткрытии

#КонецОбласти // СобытияФормы


#Область Команды

&НаКлиенте
Процедура НоваяИгра(Команда)
	
	НайденныеСлова.Очистить();
	
	Элементы.ФормаШаги.Видимость = Истина;
	
	ДобавитьВЛог("Начните отгадывать с нажатия нижней кнопки" + (Символы.ПС + Символы.ПС + Символы.ПС));
	Шаг = 1;
	Шаблон = "";
	ЧастьЗапроса = "";
	Элементы.ФормаШаги.Доступность = Истина;
	
	Элементы.ФормаШаги.Заголовок = "Шаг " + Шаг;
	
	УдалитьСлова();
	СоздатьСлова();
	
КонецПроцедуры // НоваяИгра()

&НаКлиенте
Процедура НайтиСлова(Команда)
	
	НайденныеСлова.Очистить();
	
	Если НЕ СловоОтгадано() Тогда
		Слова = ПолучитьСловаДляШага();
		
		НайденныеСлова.ЗагрузитьЗначения(Слова);
		
		ДобавитьВЛог("Выберите в списке слово №" + Шаг + " (из " + Слова.Количество() + " возможных) [по кнопке Enter или двойному клику мышки]");
	Иначе
		ДобавитьВЛог("Слово отгадано!");
		ДобавитьВЛог("Начните новую игру");
		Элементы.ФормаШаги.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры // НайтиСлова()

&НаКлиенте
Процедура ЗагрузитьСловарь(Команда)
	
	Если НЕ ЗначениеЗаполнено(ПутьСловаря) Тогда
		Сообщить("Не указан путь к словарю");
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Кодировка) Тогда
		Сообщить("Не указана кодировка");
		Возврат;
	КонецЕсли;
	
	КоличествоСловДоЗагрузки = КоличествоСловВСловаре();
	
	Словарь = Новый ДвоичныеДанные(ПутьСловаря);
	
	Адрес = ПоместитьВоВременноеХранилище(Словарь);
	
	ЗагрузитьСловарьНаСервере(Адрес);
	
	Сообщить("Словарь загружен");
	
	Если КоличествоСловВСловаре() <> 0 Тогда
		Если КоличествоСловДоЗагрузки = 0 Тогда
			НоваяИгра(Команды.Найти("НоваяИгра"));
		КонецЕсли;
	Иначе 
		ДобавитьВЛог("Загруженный словарь пустой, загрузите другой словарь");
	КонецЕсли;
	
КонецПроцедуры // ЗагрузитьСловарь()

&НаКлиенте
Процедура ОчиститьСловарь(Команда)
	
	ОчиститьСловарьНаСервере();
	
	Сообщить("Словарь очищен");
	
КонецПроцедуры // ОчиститьСловарь()

#КонецОбласти // Команды


#Область СобытияЭлементовФормы

&НаКлиенте
Процедура ПутьСловаряНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПолныйПуть = ПолучитьПутьКФайлу("Выберите файл словаря", "Текстовый документ (*.txt)|*.txt");
	
	Если НЕ ПолныйПуть = "" Тогда
		ПутьСловаря = ПолныйПуть;
	КонецЕсли;
	
КонецПроцедуры // ПутьСловаряНачалоВыбора()

&НаКлиенте
Процедура НайденныеСловаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекСлово = ВРег(Элемент.ТекущиеДанные.Значение);
	
	Для б = 1 По КолВоБукв Цикл
		ЭтотОбъект[Слово + Шаг + Буква + б] = Сред(ТекСлово, б, 1);
	КонецЦикла;
	
	ДобавитьВЛог("Выбрано слово: " + ТекСлово);
	
	Если Шаг < КолВоПопыток Тогда
		ДобавитьВЛог("Если требуется, измените статусы букв и перейдите к следующему шагу");
		
		Шаг = Шаг + 1;
		
		Элементы.ФормаШаги.Заголовок = "Шаг " + Шаг;
	Иначе 
		Элементы.ФормаШаги.Видимость = Ложь;
		ДобавитьВЛог("Начните новую игру");
	КонецЕсли;
	
КонецПроцедуры // НайденныеСловаВыбор()

&НаКлиенте
Процедура ИзменитьЦветБуквы(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элемент.ЦветФона = ЦветСерый Тогда
		Элемент.ЦветФона	= ЦветБелый;
		Элемент.ЦветТекста	= ЦветЧерный;
	ИначеЕсли Элемент.ЦветФона = ЦветБелый Тогда
		Элемент.ЦветФона	= ЦветЖелтый;
		Элемент.ЦветТекста	= ЦветЧерный;	
	ИначеЕсли Элемент.ЦветФона = ЦветЖелтый Тогда
		Элемент.ЦветФона	= ЦветСерый;
		Элемент.ЦветТекста	= ЦветБелый;
	КонецЕсли;
	
КонецПроцедуры // ИзменитьЦветБуквы()

#КонецОбласти // СобытияЭлементовФормы


#Область Движок

&НаСервере
Функция ПолучитьСловаДляШага()
	
	Шаблон = ПолучитьШаблон();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Словарь.Слово КАК Слово
	|ИЗ
	|	РегистрСведений.Словарь КАК Словарь
	|ГДЕ
	|	Словарь.Слово ПОДОБНО &Шаблон";
	
	Запрос.Текст = Запрос.Текст + Символы.ПС + ЧастьЗапроса;
	Запрос.Текст = Запрос.Текст + Символы.ПС + "УПОРЯДОЧИТЬ ПО Слово";
	
	Запрос.УстановитьПараметр("Шаблон", Шаблон);
	
	Результат = Запрос.Выполнить();
	
	ТЗ = Результат.Выгрузить();
	
	Возврат ТЗ.ВыгрузитьКолонку("Слово");
	
КонецФункции // ПолучитьСловаДляШага()

&НаСервере
Функция ПолучитьШаблон()
	
	Если Шаг = 1 Тогда
		Шаблон = "";
		
		Для б = 1 По КолВоБукв Цикл
			Шаблон = Шаблон + "_";
		КонецЦикла;
	Иначе
		ПредШаблон = Шаблон;
		Шаблон = "";
		
		ОтсутствующиеБуквы.Очистить();
		ПрисутствующиеБуквы.Очистить();
		
		Для б = 1 По КолВоБукв Цикл
			ИмяБуквы = Слово + (Шаг - 1) + Буква + б;
			ТекЭлемент = Элементы[ИмяБуквы];
			ТекБуква = НРег(ЭтотОбъект[ИмяБуквы]);
			Шаблон = Шаблон + ?(ТекЭлемент.ЦветФона = ЦветЖелтый, ТекБуква, Сред(ПредШаблон, б, 1));
			
			Если ТекЭлемент.ЦветФона <> ЦветЖелтый Тогда
				ЧастьЗапроса = ЧастьЗапроса + "И ПОДСТРОКА(Словарь.Слово, " + б + ", 1) <> """ + ТекБуква + """" + Символы.ПС;
			КонецЕсли;	
			
			Если ТекЭлемент.ЦветФона = ЦветБелый Тогда
				Если ПрисутствующиеБуквы.НайтиПоЗначению(ТекБуква) = Неопределено Тогда
					ПрисутствующиеБуквы.Добавить(ТекБуква);
				КонецЕсли;
			ИначеЕсли ТекЭлемент.ЦветФона = ЦветСерый Тогда
				Если ОтсутствующиеБуквы.НайтиПоЗначению(ТекБуква) = Неопределено Тогда
					ОтсутствующиеБуквы.Добавить(ТекБуква);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Для каждого б Из ОтсутствующиеБуквы Цикл
			Если ПрисутствующиеБуквы.НайтиПоЗначению(б.Значение) <> Неопределено Тогда
				ОтсутствующиеБуквы.Удалить(б);
			КонецЕсли;
		КонецЦикла;
		
		Для каждого б Из ОтсутствующиеБуквы Цикл
			Если СтрНайти(Шаблон, б) = 0 Тогда
				ЧастьЗапроса = ЧастьЗапроса + "И СТРНАЙТИ(Словарь.Слово, """ + б + """) = 0" + Символы.ПС;
			КонецЕсли;
		КонецЦикла;
		
		Для каждого б Из ПрисутствующиеБуквы Цикл
			ЧастьЗапроса = ЧастьЗапроса + "И СТРНАЙТИ(Словарь.Слово, """ + б + """) <> 0" + Символы.ПС;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Шаблон;
	
КонецФункции // ПолучитьШаблон()

&НаКлиенте
Функция СловоОтгадано()
	
	Отгадано = Истина;
	
	Если Шаг <> 1 Тогда
		Для б = 1 По КолВоБукв Цикл
			ИмяБуквы = Слово + (Шаг - 1) + Буква + б;
			ТекЭлемент = Элементы[ИмяБуквы];
			
			Если ТекЭлемент.ЦветФона <> ЦветЖелтый Тогда
				Отгадано = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Отгадано = Ложь;
	КонецЕсли;
	
	Возврат Отгадано;
	
КонецФункции // СловоОтгадано()

&НаСервере
Процедура СоздатьСлова()
	
	МойШрифт = Новый Шрифт( , 10, Истина);
	
	Для с = 1 По КолВоПопыток Цикл
		ИмяГруппы = Слово + с;
		ГруппаСлово = ЭтаФорма.Элементы.Добавить(ИмяГруппы, Тип("ГруппаФормы"), Элементы.ГруппаСлова);
		ГруппаСлово.Вид						= ВидГруппыФормы.ОбычнаяГруппа;
		ГруппаСлово.Заголовок				= ИмяГруппы;
		ГруппаСлово.Отображение				= ОтображениеОбычнойГруппы.ОбычноеВыделение;
		ГруппаСлово.ОтображатьЗаголовок 	= Истина; 
		ГруппаСлово.ОтображениеПодсказки	= ОтображениеПодсказки.Нет;
		ГруппаСлово.Группировка				= ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		
		ДобавляемыеРеквизиты = Новый Массив;
		
		Для б = 1 По КолВоБукв Цикл
			ИмяБуквы = ИмяГруппы + Буква + б;
			НоваяБуква = Новый РеквизитФормы(ИмяБуквы, Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(1)));
			ДобавляемыеРеквизиты.Добавить(НоваяБуква);
		КонецЦикла;
		
		ЭтаФорма.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		Для б = 1 По КолВоБукв Цикл
			ИмяБуквы = ИмяГруппы + Буква + б;
			НовыйЭлемент = ЭтаФорма.Элементы.Добавить(ИмяБуквы, Тип("ПолеФормы"), ГруппаСлово);
			НовыйЭлемент.Вид				= ВидПоляФормы.ПолеВвода;
			НовыйЭлемент.ПутьКДанным		= ИмяБуквы;
			НовыйЭлемент.ПоложениеЗаголовка	= ПоложениеЗаголовкаЭлементаФормы.Нет;
			НовыйЭлемент.КнопкаОткрытия		= Истина;
			НовыйЭлемент.ЦветФона			= ЦветСерый;
			НовыйЭлемент.ЦветТекста			= ЦветБелый;
			НовыйЭлемент.Шрифт				= МойШрифт;
			
			НовыйЭлемент.УстановитьДействие("Открытие", "ИзменитьЦветБуквы");
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры // СоздатьСлова()

&НаСервере
Процедура УдалитьСлова()
	
	ЭлементыДляУдаления = Элементы.ГруппаСлова.ПодчиненныеЭлементы;
	
	КолВо = ЭлементыДляУдаления.Количество();
	
	Для й = 1 - КолВо По 0 Цикл
		Элементы.Удалить(ЭлементыДляУдаления[-й]);
	КонецЦикла;
	
	ПотенциальныеИмена = Новый Массив;
	
	Для с = 1 По 9 Цикл
		ИмяГруппы = Слово + с;
		
		Для б = 1 По 9 Цикл
			ИмяБуквы = ИмяГруппы + Буква + б;
			
			ПотенциальныеИмена.Добавить(ИмяБуквы);
		КонецЦикла;
	КонецЦикла;
	
	ВсеРеквизиты = ПолучитьРеквизиты();
	
	УдаляемыеРеквизиты = Новый Массив;
	
	Для каждого Рекв Из ВсеРеквизиты Цикл
		Если ПотенциальныеИмена.Найти(Рекв.Имя) <> Неопределено Тогда
			УдаляемыеРеквизиты.Добавить(Рекв.Имя);
		КонецЕсли;
		
	КонецЦикла;
	
	ЭтаФорма.ИзменитьРеквизиты(, УдаляемыеРеквизиты);
	
КонецПроцедуры // УдалитьСлова()

#КонецОбласти // Движок


#Область СлужебныеМетоды

&НаКлиенте
Функция ПолучитьПутьКФайлу(Заголовок, Фильтр)
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.ПроверятьСуществованиеФайла	= Истина;
	ДиалогОткрытияФайла.МножественныйВыбор			= Ложь;
	ДиалогОткрытияФайла.Заголовок					= Заголовок;
	ДиалогОткрытияФайла.Фильтр						= Фильтр;
	
	Если ДиалогОткрытияФайла.Выбрать() Тогда             
		Возврат ДиалогОткрытияФайла.ПолноеИмяФайла;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции // ПолучитьПутьКФайлу()

&НаКлиенте
Процедура ДобавитьВЛог(Сообщение)
	
	Лог.Вставить(0, Сообщение + Символы.ПС);
	ТекстЛога = СтрСоединить(Лог.ВыгрузитьЗначения(), Символы.ПС);
	
КонецПроцедуры // ДобавитьВЛог()

#КонецОбласти // СлужебныеМетоды


#Область ОбработкаРегистра

&НаСервере
Процедура ЗагрузитьСловарьНаСервере(Адрес)
	
	Словарь = ПолучитьИзВременногоХранилища(Адрес);
	
	Путь = ПолучитьИмяВременногоФайла("txt");
	
	Словарь.Записать(Путь);
	
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	ТекстовыйДокумент.Прочитать(Путь, Кодировка);
	СловарныеСлова = ТекстовыйДокумент.ПолучитьТекст();
	
	РазмерПачки = 3000;
	
	н = 0;
	
	Для й = 1 По СтрЧислоСтрок(СловарныеСлова) Цикл
		Если н = 0 Тогда
			НачатьТранзакцию();
		КонецЕсли;
		
		Запись = РегистрыСведений.Словарь.СоздатьМенеджерЗаписи();
		Запись.Слово = НРег(СтрПолучитьСтроку(СловарныеСлова, й));
		Запись.Записать();
		н = н + 1;
		
		Если н = РазмерПачки Тогда
			ЗафиксироватьТранзакцию();
			н = 0;
		КонецЕсли;
	КонецЦикла;
	
	Если н <> 0 Тогда
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
КонецПроцедуры // ЗагрузитьСловарьНаСервере()

&НаСервереБезКонтекста
Процедура ОчиститьСловарьНаСервере()
	
	Набор = РегистрыСведений.Словарь.СоздатьНаборЗаписей();
	Набор.Очистить();
	Набор.Записать();
	
КонецПроцедуры // ОчиститьСловарьНаСервере()

&НаСервереБезКонтекста
Функция КоличествоСловВСловаре()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(1) КАК КолВо
	|ИЗ
	|	РегистрСведений.Словарь КАК Словарь";
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.КолВо;
	
КонецФункции // КоличествоСловВСловаре()

#КонецОбласти // ОбработкаРегистра
